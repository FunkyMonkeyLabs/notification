{"name":"Notification","tagline":"Library which helps you to send notification (via different channels) to user.","body":"### What's that?\r\nFML/Notification lib allows to send notification through different channels during application runtime.\r\nLibrary can collect many messages to many users and send it to them once, when application is going down.\r\n\r\n### Instalation\r\n\r\n#### composer\r\n```\r\n$ php composer.phar require fml/notification:1.3\r\n```\r\n\r\n### Usage\r\nBy default there is a one channel - mail channel. It requires mailer service (Swift_Mailer). If you want to send notification to user Patryk with e-mail address contact@funkymonkeylabs.pl, with message \"Hello Patryk\", you have to write:\r\n\r\n```php\r\n<?php\r\n// index.php\r\nrequire_once __DIR__.'/vendor/autoload.php';\r\n\r\n$channel = new \\FML\\Notification\\Channel\\Channel\\SwiftMailerMailChannel();\r\n$messageManager = new \\FML\\Notification\\MessageManager();\r\n$messageManager->addChannel($channel);\r\n\r\n$recipient = new \\FML\\Notification\\Recipient\\Recipient();\r\n$recipient\r\n    ->setAddress('contact@funkymonkeylabs.pl')\r\n    ->setName('Patryk');\r\n\r\n$message = new \\FML\\Notification\\Example\\Message\\PlainMessage();\r\n$message\r\n    ->addRecipient($recipient);\r\n\r\n$messageManager->addMessage($message);\r\n$messageManager->flush();\r\n```\r\n\r\n### Creating new channels\r\nYou can also create your own channel (for example if you are going to send SMS messages).\r\n\r\n\r\n```php\r\n// src/Acme/Channel/SmsChannel.php\r\nnamespace Acme\\Channel;\r\n\r\nuse FML\\Notification\\Channel\\AbstractChannel;\r\nyse Acme\\Provider\\SmsProvider\r\n\r\nclass SmsChannel extends AbstractChannel\r\n{\r\n    public static $channelName = 'sms';\r\n\r\n    /**\r\n     * @param SmsProvider\r\n     */\r\n    private $smsProvider;\r\n\r\n    public function __construct($smsProvider)\r\n    {\r\n        $this->name = self::$channelName;\r\n        $this->provider = $smsProvider;\r\n    }\r\n\r\n    /**\r\n     * send notifications by sms provider\r\n     * @return string\r\n     */\r\n    public function flush()\r\n    {\r\n        foreach ($this->messages as $message) {\r\n            $recipients = $message->getRecipients();\r\n            foreach($message->getRecipients() as $recipient) {\r\n                $this->provider->send(\r\n                    $recipient->getAddress(), // it can be phone number for example\r\n                    $message->getContent()\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nnext, you have to create notification that can be send by SmsChannel:\r\n\r\n```php\r\n<?php\r\n// src/Acme/Message/SmsMessage.php\r\nnamespace Acme\\Message;\r\n\r\nuse FML\\Notification\\Message\\Message;\r\n\r\nclass SmsMessage extends Message\r\n{\r\n    public function __construct()\r\n    {\r\n        $this->channel = 'sms';\r\n    }\r\n\r\n    /**\r\n     * @return string\r\n     */\r\n    public function getContent()\r\n    {\r\n        return $content; // simple return given content\r\n    }\r\n}\r\n```\r\n\r\nlast step is similar to first example:\r\n\r\n```php\r\n<?php\r\n// index.php\r\nrequire_once __DIR__.'/vendor/autoload.php';\r\n$provider = new Acme\\Provider\\SmsProvider(array(...)); // create new instance of sms provider with some configuration\r\n$smsChannel = new Acme\\Channel\\SmsChannel($provider);\r\n$mailChannel = new \\FML\\Notification\\Channel\\Channel\\SwiftMailerMailChannel();\r\n\r\n$messageManager = new \\FML\\Notification\\MessageManager();\r\n$messageManager\r\n    ->addChannel($mailChannel)\r\n    ->addChannel($smsChannel);\r\n\r\n$recipient = new \\FML\\Notification\\Recipient\\Recipient();\r\n$recipient\r\n    ->setAddress('contact@funkymonkeylabs.pl')\r\n    ->setName('Patryk');\r\n\r\n// mail message\r\n$message = new \\FML\\Notification\\Example\\Message\\PlainMessage();\r\n$message\r\n    ->addRecipient($recipient);\r\n\r\n// sms message\r\n$smsRecipient = new \\FML\\Notification\\Recipient\\Recipient();\r\n$smsRecipient\r\n    ->setAddress('883-211-446'); //FunkyMonkeyLabs phone number! Yeah!\r\n\r\n$smsMessage = new \\Acme\\Message\\SmsMessage();\r\n$smsMessage\r\n    ->addRecipient($recipient)\r\n    ->setContent(\"Hello from Mars!\");\r\n\r\n$messageManager\r\n    ->addMessage($message)\r\n    ->addMessage($smsMessage);\r\n\r\n$messageManager->flush();\r\n```\r\n\r\nThat's it! You just sent two messages. Email + sms. So simple, right?\r\n\r\n### Authors and Contributors\r\n@abdulklarapl Patryk Szlagowski\r\n\r\n### Support or Contact\r\nHaving trouble with library? Check https://github.com/FunkyMonkeyLabs/notification and give us some info! You can create issue as well.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}